NO... I think this is not broken out enough. There should be a ::doc
and ::frag. They share plenty, yes but they require too much juggling
together *and* they eliminate the possibility of meta settings like
auto_fix in XC proper to apply to each instance. Or even as plugins in
that sense...

NEED TO BACK UP A LITTLE and run it again.

Is XHTML::Class going too far? And assuming too much responsibility?

Let's let the spell checker answer that: "RESPONSIBILITY is correct"

xu() should be a shortcut and it is the only magic part like the HTML
parser family. Otherwise we want parse_string, parse_fh, etc.

All methods except as_string should return the object.

    autobox the strings in the scope? No... too slow for this I think. How about blessing the string into XHTML::Util

print xu($path_class)
    ->enpara
    ->strip_tags("a")
    ->as_string;

[% xu( article.bodyDoc ).enpara.as_string %]

[% article.bodyDoc | enpara  %]

[% article.enpara.as_string %]

WHAT IS THE RIGHT THING TO DO HERE?

  print xu("OH HAI");
  print xu("OH HAI")->to_string;

LINE BETWEEN as_string etc when originally a document or whatever is
PRETTY BLURRY!!! It shouldn't be.

as_text
as_xhtml
as_string (relative to whatever it started as?)


stream parsing? NO

has dtd
 coerce from string or URI
 ->XML::LibXML::Dtd
has parser?
has source (string?) 
has debug 
has encoding

Sanitize only if a validation fails

XHTML::ClassRole::Enpara?
XHTML::ClassRole::Sanitize

requires qw( make_selector doc )


package XHTML::Class;
requires qw( sanitize )?

